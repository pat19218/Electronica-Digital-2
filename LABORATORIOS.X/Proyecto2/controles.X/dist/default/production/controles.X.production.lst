

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Oct 13 12:34:51 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  0105                     	;# 
   190  0107                     	;# 
   191  0108                     	;# 
   192  0109                     	;# 
   193  010C                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  0185                     	;# 
   199  0187                     	;# 
   200  0188                     	;# 
   201  0189                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  0000                     	;# 
   205  0001                     	;# 
   206  0002                     	;# 
   207  0003                     	;# 
   208  0004                     	;# 
   209  0005                     	;# 
   210  0006                     	;# 
   211  0007                     	;# 
   212  0008                     	;# 
   213  0009                     	;# 
   214  000A                     	;# 
   215  000B                     	;# 
   216  000C                     	;# 
   217  000D                     	;# 
   218  000E                     	;# 
   219  000E                     	;# 
   220  000F                     	;# 
   221  0010                     	;# 
   222  0011                     	;# 
   223  0012                     	;# 
   224  0013                     	;# 
   225  0014                     	;# 
   226  0015                     	;# 
   227  0015                     	;# 
   228  0016                     	;# 
   229  0017                     	;# 
   230  0018                     	;# 
   231  0019                     	;# 
   232  001A                     	;# 
   233  001B                     	;# 
   234  001B                     	;# 
   235  001C                     	;# 
   236  001D                     	;# 
   237  001E                     	;# 
   238  001F                     	;# 
   239  0081                     	;# 
   240  0085                     	;# 
   241  0086                     	;# 
   242  0087                     	;# 
   243  0088                     	;# 
   244  0089                     	;# 
   245  008C                     	;# 
   246  008D                     	;# 
   247  008E                     	;# 
   248  008F                     	;# 
   249  0090                     	;# 
   250  0091                     	;# 
   251  0092                     	;# 
   252  0093                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0094                     	;# 
   256  0095                     	;# 
   257  0096                     	;# 
   258  0097                     	;# 
   259  0098                     	;# 
   260  0099                     	;# 
   261  009A                     	;# 
   262  009B                     	;# 
   263  009C                     	;# 
   264  009D                     	;# 
   265  009E                     	;# 
   266  009F                     	;# 
   267  0105                     	;# 
   268  0107                     	;# 
   269  0108                     	;# 
   270  0109                     	;# 
   271  010C                     	;# 
   272  010C                     	;# 
   273  010D                     	;# 
   274  010E                     	;# 
   275  010F                     	;# 
   276  0185                     	;# 
   277  0187                     	;# 
   278  0188                     	;# 
   279  0189                     	;# 
   280  018C                     	;# 
   281  018D                     	;# 
   282  001E                     _ADRESH	set	30
   283  0008                     _PORTD	set	8
   284  0007                     _PORTC	set	7
   285  0005                     _PORTA	set	5
   286  001F                     _ADCON0bits	set	31
   287  001A                     _RCREG	set	26
   288  0019                     _TXREG	set	25
   289  0018                     _RCSTAbits	set	24
   290  009E                     _ADRESL	set	158
   291  009F                     _ADCON1bits	set	159
   292  008F                     _OSCCONbits	set	143
   293  0089                     _TRISE	set	137
   294  0087                     _TRISC	set	135
   295  008C                     _PIE1bits	set	140
   296  009A                     _SPBRGH	set	154
   297  0099                     _SPBRG	set	153
   298  0098                     _TXSTAbits	set	152
   299  0189                     _ANSELH	set	393
   300  0188                     _ANSEL	set	392
   301  0187                     _BAUDCTLbits	set	391
   302                           
   303                           	psect	cinit
   304  000F                     start_initialization:	
   305                           ; #config settings
   306                           
   307  000F                     __initialization:
   308                           
   309                           ; Clear objects allocated to COMMON
   310  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   311  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   312  0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   313  0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   314  0013                     end_of_initialization:	
   315                           ;End of C runtime variable initialization code
   316                           
   317  0013                     __end_of__initialization:
   318  0013  0183               	clrf	3
   319  0014  120A  118A  2817   	ljmp	_main	;jump to C main() function
   320                           
   321                           	psect	bssCOMMON
   322  0070                     __pbssCOMMON:
   323  0070                     _dato2:
   324  0070                     	ds	2
   325  0072                     _dato1:
   326  0072                     	ds	2
   327                           
   328                           	psect	cstackCOMMON
   329  0074                     __pcstackCOMMON:
   330  0074                     ?_USART_Init:
   331  0074                     ?_isr:	
   332                           ; 1 bytes @ 0x0
   333                           
   334  0074                     ??_isr:	
   335                           ; 1 bytes @ 0x0
   336                           
   337  0074                     ?_main:	
   338                           ; 1 bytes @ 0x0
   339                           
   340                           
   341                           ; 1 bytes @ 0x0
   342  0074                     	ds	2
   343  0076                     ??_USART_Init:
   344  0076                     ??_main:	
   345                           ; 1 bytes @ 0x2
   346                           
   347                           
   348                           ; 1 bytes @ 0x2
   349  0076                     	ds	2
   350                           
   351                           	psect	maintext
   352  0017                     __pmaintext:	
   353 ;;
   354 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   355 ;;
   356 ;; *************** function _main *****************
   357 ;; Defined at:
   358 ;;		line 55 in file "buzzer.c"
   359 ;; Parameters:    Size  Location     Type
   360 ;;		None
   361 ;; Auto vars:     Size  Location     Type
   362 ;;		None
   363 ;; Return value:  Size  Location     Type
   364 ;;                  1    wreg      void 
   365 ;; Registers used:
   366 ;;		wreg, status,2, status,0, pclath, cstack
   367 ;; Tracked objects:
   368 ;;		On entry : B00/0
   369 ;;		On exit  : 0/0
   370 ;;		Unchanged: 0/0
   371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   372 ;;      Params:         0       0       0       0       0
   373 ;;      Locals:         0       0       0       0       0
   374 ;;      Temps:          2       0       0       0       0
   375 ;;      Totals:         2       0       0       0       0
   376 ;;Total ram usage:        2 bytes
   377 ;; Hardware stack levels required when called:    2
   378 ;; This function calls:
   379 ;;		_USART_Init
   380 ;; This function is called by:
   381 ;;		Startup code after reset
   382 ;; This function uses a non-reentrant model
   383 ;;
   384                           
   385                           
   386                           ;psect for function _main
   387  0017                     _main:
   388  0017                     l730:	
   389                           ;incstack = 0
   390                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   391                           
   392                           
   393                           ;buzzer.c: 56:     USART_Init();
   394  0017  120A  118A  2097  120A  118A  	fcall	_USART_Init
   395  001C                     l732:
   396                           
   397                           ;buzzer.c: 57:     ANSEL = 0b01100000;
   398  001C  3060               	movlw	96
   399  001D  1683               	bsf	3,5	;RP0=1, select bank3
   400  001E  1703               	bsf	3,6	;RP1=1, select bank3
   401  001F  0088               	movwf	8	;volatile
   402  0020                     l734:
   403                           
   404                           ;buzzer.c: 58:     ANSELH = 0x00;
   405  0020  0189               	clrf	9	;volatile
   406  0021                     l736:
   407                           
   408                           ;buzzer.c: 60:     TRISC = 0b10000000;
   409  0021  3080               	movlw	128
   410  0022  1683               	bsf	3,5	;RP0=1, select bank1
   411  0023  1303               	bcf	3,6	;RP1=0, select bank1
   412  0024  0087               	movwf	7	;volatile
   413  0025                     l738:
   414                           
   415                           ;buzzer.c: 61:     TRISE = 0b111;
   416  0025  3007               	movlw	7
   417  0026  0089               	movwf	9	;volatile
   418  0027                     l740:
   419                           
   420                           ;buzzer.c: 63:     OSCCONbits.IRCF = 0b111;
   421  0027  3070               	movlw	112
   422  0028  048F               	iorwf	15,f	;volatile
   423  0029                     l742:
   424                           
   425                           ;buzzer.c: 64:     OSCCONbits.SCS = 1;
   426  0029  140F               	bsf	15,0	;volatile
   427  002A                     l744:
   428                           
   429                           ;buzzer.c: 68:     ADCON1bits.ADFM = 0;
   430  002A  139F               	bcf	31,7	;volatile
   431  002B                     l746:
   432                           
   433                           ;buzzer.c: 69:     ADCON1bits.VCFG0 = 0;
   434  002B  121F               	bcf	31,4	;volatile
   435  002C                     l748:
   436                           
   437                           ;buzzer.c: 70:     ADCON1bits.VCFG1 = 0;
   438  002C  129F               	bcf	31,5	;volatile
   439  002D                     l750:
   440                           
   441                           ;buzzer.c: 71:     ADCON0bits.ADCS0 = 0;
   442  002D  1283               	bcf	3,5	;RP0=0, select bank0
   443  002E  1303               	bcf	3,6	;RP1=0, select bank0
   444  002F  131F               	bcf	31,6	;volatile
   445  0030                     l752:
   446                           
   447                           ;buzzer.c: 72:     ADCON0bits.ADCS1 = 1;
   448  0030  179F               	bsf	31,7	;volatile
   449  0031                     l754:
   450                           
   451                           ;buzzer.c: 73:     ADCON0bits.CHS = 5;
   452  0031  081F               	movf	31,w	;volatile
   453  0032  39C3               	andlw	-61
   454  0033  3814               	iorlw	20
   455  0034  009F               	movwf	31	;volatile
   456  0035                     l756:
   457                           
   458                           ;buzzer.c: 74:     _delay((unsigned long)((100)*(8000000/4000000.0)));
   459  0035  3042               	movlw	66
   460  0036  00F6               	movwf	??_main
   461  0037                     u67:
   462  0037  0BF6               	decfsz	??_main,f
   463  0038  2837               	goto	u67
   464  0039  0000               	nop
   465  003A                     l758:
   466                           
   467                           ;buzzer.c: 75:     ADCON0bits.ADON = 1;
   468  003A  1283               	bcf	3,5	;RP0=0, select bank0
   469  003B  1303               	bcf	3,6	;RP1=0, select bank0
   470  003C  141F               	bsf	31,0	;volatile
   471  003D                     l760:
   472                           
   473                           ;buzzer.c: 77:     ADCON0bits.GO = 1;
   474  003D  149F               	bsf	31,1	;volatile
   475  003E                     l762:
   476                           
   477                           ;buzzer.c: 79:     PORTA = 0x00;
   478  003E  0185               	clrf	5	;volatile
   479  003F                     l764:
   480                           
   481                           ;buzzer.c: 80:     PORTC = 0x00;
   482  003F  0187               	clrf	7	;volatile
   483  0040                     l766:
   484                           
   485                           ;buzzer.c: 81:     PORTD = 0x00;
   486  0040  0188               	clrf	8	;volatile
   487  0041                     l768:
   488                           
   489                           ;buzzer.c: 86:         if(ADCON0bits.GO == 0){
   490  0041  1283               	bcf	3,5	;RP0=0, select bank0
   491  0042  1303               	bcf	3,6	;RP1=0, select bank0
   492  0043  189F               	btfsc	31,1	;volatile
   493  0044  2846               	goto	u31
   494  0045  2847               	goto	u30
   495  0046                     u31:
   496  0046  288A               	goto	l788
   497  0047                     u30:
   498  0047                     l770:
   499                           
   500                           ;buzzer.c: 88:             if(ADCON0bits.CHS == 6){
   501  0047  0C1F               	rrf	31,w	;volatile
   502  0048  00F6               	movwf	??_main
   503  0049  0C76               	rrf	??_main,w
   504  004A  390F               	andlw	15
   505  004B  3A06               	xorlw	6
   506  004C  1D03               	skipz
   507  004D  284F               	goto	u41
   508  004E  2850               	goto	u40
   509  004F                     u41:
   510  004F  286F               	goto	l778
   511  0050                     u40:
   512  0050                     l772:
   513                           
   514                           ;buzzer.c: 89:                 dato2 = ADRESH<<2;
   515  0050  081E               	movf	30,w	;volatile
   516  0051  00F6               	movwf	??_main
   517  0052  01F7               	clrf	??_main+1
   518  0053  1003               	clrc
   519  0054  0DF6               	rlf	??_main,f
   520  0055  0DF7               	rlf	??_main+1,f
   521  0056  1003               	clrc
   522  0057  0DF6               	rlf	??_main,f
   523  0058  0DF7               	rlf	??_main+1,f
   524  0059  0876               	movf	??_main,w
   525  005A  00F0               	movwf	_dato2
   526  005B  0877               	movf	??_main+1,w
   527  005C  00F1               	movwf	_dato2+1
   528  005D                     l774:
   529                           
   530                           ;buzzer.c: 90:                 dato2 += ADRESL;
   531  005D  1683               	bsf	3,5	;RP0=1, select bank1
   532  005E  1303               	bcf	3,6	;RP1=0, select bank1
   533  005F  081E               	movf	30,w	;volatile
   534  0060  00F6               	movwf	??_main
   535  0061  01F7               	clrf	??_main+1
   536  0062  0876               	movf	??_main,w
   537  0063  07F0               	addwf	_dato2,f
   538  0064  1803               	skipnc
   539  0065  0AF1               	incf	_dato2+1,f
   540  0066  0877               	movf	??_main+1,w
   541  0067  07F1               	addwf	_dato2+1,f
   542  0068                     l776:
   543                           
   544                           ;buzzer.c: 91:                 ADCON0bits.CHS = 5;
   545  0068  1283               	bcf	3,5	;RP0=0, select bank0
   546  0069  1303               	bcf	3,6	;RP1=0, select bank0
   547  006A  081F               	movf	31,w	;volatile
   548  006B  39C3               	andlw	-61
   549  006C  3814               	iorlw	20
   550  006D  009F               	movwf	31	;volatile
   551                           
   552                           ;buzzer.c: 92:             }
   553  006E  2883               	goto	l784
   554  006F                     l778:
   555  006F  0C1F               	rrf	31,w	;volatile
   556  0070  00F6               	movwf	??_main
   557  0071  0C76               	rrf	??_main,w
   558  0072  390F               	andlw	15
   559  0073  3A05               	xorlw	5
   560  0074  1D03               	skipz
   561  0075  2877               	goto	u51
   562  0076  2878               	goto	u50
   563  0077                     u51:
   564  0077  2883               	goto	l784
   565  0078                     u50:
   566  0078                     l780:
   567                           
   568                           ;buzzer.c: 94:                 dato1 = ADRESH;
   569  0078  081E               	movf	30,w	;volatile
   570  0079  00F6               	movwf	??_main
   571  007A  01F7               	clrf	??_main+1
   572  007B  0876               	movf	??_main,w
   573  007C  00F2               	movwf	_dato1
   574  007D  0877               	movf	??_main+1,w
   575  007E  00F3               	movwf	_dato1+1
   576  007F                     l782:
   577                           
   578                           ;buzzer.c: 95:                 ADCON0bits.CHS = 6;
   579  007F  081F               	movf	31,w	;volatile
   580  0080  39C3               	andlw	-61
   581  0081  3818               	iorlw	24
   582  0082  009F               	movwf	31	;volatile
   583  0083                     l784:
   584                           
   585                           ;buzzer.c: 97:             _delay((unsigned long)((50)*(8000000/4000000.0)));
   586  0083  3021               	movlw	33
   587  0084  00F6               	movwf	??_main
   588  0085                     u77:
   589  0085  0BF6               	decfsz	??_main,f
   590  0086  2885               	goto	u77
   591  0087                     l786:
   592                           
   593                           ;buzzer.c: 99:             ADCON0bits.GO = 1;
   594  0087  1283               	bcf	3,5	;RP0=0, select bank0
   595  0088  1303               	bcf	3,6	;RP1=0, select bank0
   596  0089  149F               	bsf	31,1	;volatile
   597  008A                     l788:
   598                           
   599                           ;buzzer.c: 102:         _delay((unsigned long)((10)*(8000000/4000.0)));
   600  008A  301A               	movlw	26
   601  008B  00F7               	movwf	??_main+1
   602  008C  30F8               	movlw	248
   603  008D  00F6               	movwf	??_main
   604  008E                     u87:
   605  008E  0BF6               	decfsz	??_main,f
   606  008F  288E               	goto	u87
   607  0090  0BF7               	decfsz	??_main+1,f
   608  0091  288E               	goto	u87
   609  0092  0000               	nop
   610  0093  2841               	goto	l768
   611  0094  120A  118A  280C   	ljmp	start
   612  0097                     __end_of_main:
   613                           
   614                           	psect	text1
   615  0097                     __ptext1:	
   616 ;; *************** function _USART_Init *****************
   617 ;; Defined at:
   618 ;;		line 4 in file "USART.c"
   619 ;; Parameters:    Size  Location     Type
   620 ;;		None
   621 ;; Auto vars:     Size  Location     Type
   622 ;;		None
   623 ;; Return value:  Size  Location     Type
   624 ;;                  1    wreg      void 
   625 ;; Registers used:
   626 ;;		wreg, status,2
   627 ;; Tracked objects:
   628 ;;		On entry : 0/0
   629 ;;		On exit  : 0/0
   630 ;;		Unchanged: 0/0
   631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   632 ;;      Params:         0       0       0       0       0
   633 ;;      Locals:         0       0       0       0       0
   634 ;;      Temps:          0       0       0       0       0
   635 ;;      Totals:         0       0       0       0       0
   636 ;;Total ram usage:        0 bytes
   637 ;; Hardware stack levels used:    1
   638 ;; Hardware stack levels required when called:    1
   639 ;; This function calls:
   640 ;;		Nothing
   641 ;; This function is called by:
   642 ;;		_main
   643 ;; This function uses a non-reentrant model
   644 ;;
   645                           
   646                           
   647                           ;psect for function _USART_Init
   648  0097                     _USART_Init:
   649  0097                     l678:	
   650                           ;incstack = 0
   651                           ; Regs used in _USART_Init: [wreg+status,2]
   652                           
   653                           
   654                           ;USART.c: 6:     TXSTAbits.SYNC = 0;
   655  0097  1683               	bsf	3,5	;RP0=1, select bank1
   656  0098  1303               	bcf	3,6	;RP1=0, select bank1
   657  0099  1218               	bcf	24,4	;volatile
   658                           
   659                           ;USART.c: 7:     TXSTAbits.BRGH = 1;
   660  009A  1518               	bsf	24,2	;volatile
   661                           
   662                           ;USART.c: 8:     BAUDCTLbits.BRG16 = 1;
   663  009B  1683               	bsf	3,5	;RP0=1, select bank3
   664  009C  1703               	bsf	3,6	;RP1=1, select bank3
   665  009D  1587               	bsf	7,3	;volatile
   666  009E                     l680:
   667                           
   668                           ;USART.c: 10:     SPBRG = 207;
   669  009E  30CF               	movlw	207
   670  009F  1683               	bsf	3,5	;RP0=1, select bank1
   671  00A0  1303               	bcf	3,6	;RP1=0, select bank1
   672  00A1  0099               	movwf	25	;volatile
   673  00A2                     l682:
   674                           
   675                           ;USART.c: 11:     SPBRGH = 0;
   676  00A2  019A               	clrf	26	;volatile
   677  00A3                     l684:
   678                           
   679                           ;USART.c: 13:     RCSTAbits.SPEN = 1;
   680  00A3  1283               	bcf	3,5	;RP0=0, select bank0
   681  00A4  1303               	bcf	3,6	;RP1=0, select bank0
   682  00A5  1798               	bsf	24,7	;volatile
   683  00A6                     l686:
   684                           
   685                           ;USART.c: 14:     RCSTAbits.RX9 = 0;
   686  00A6  1318               	bcf	24,6	;volatile
   687  00A7                     l688:
   688                           
   689                           ;USART.c: 15:     RCSTAbits.CREN = 1;
   690  00A7  1618               	bsf	24,4	;volatile
   691  00A8                     l690:
   692                           
   693                           ;USART.c: 16:     TXSTAbits.TXEN = 1;
   694  00A8  1683               	bsf	3,5	;RP0=1, select bank1
   695  00A9  1303               	bcf	3,6	;RP1=0, select bank1
   696  00AA  1698               	bsf	24,5	;volatile
   697  00AB                     l692:
   698                           
   699                           ;USART.c: 17:     PIE1bits.TXIE = 0;
   700  00AB  120C               	bcf	12,4	;volatile
   701  00AC                     l694:
   702                           
   703                           ;USART.c: 18:     PIE1bits.RCIE = 0;
   704  00AC  128C               	bcf	12,5	;volatile
   705  00AD                     l19:
   706  00AD  0008               	return
   707  00AE                     __end_of_USART_Init:
   708                           
   709                           	psect	text2
   710  00AE                     __ptext2:	
   711 ;; *************** function _isr *****************
   712 ;; Defined at:
   713 ;;		line 49 in file "buzzer.c"
   714 ;; Parameters:    Size  Location     Type
   715 ;;		None
   716 ;; Auto vars:     Size  Location     Type
   717 ;;		None
   718 ;; Return value:  Size  Location     Type
   719 ;;                  1    wreg      void 
   720 ;; Registers used:
   721 ;;		None
   722 ;; Tracked objects:
   723 ;;		On entry : 0/0
   724 ;;		On exit  : 0/0
   725 ;;		Unchanged: 0/0
   726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   727 ;;      Params:         0       0       0       0       0
   728 ;;      Locals:         0       0       0       0       0
   729 ;;      Temps:          2       0       0       0       0
   730 ;;      Totals:         2       0       0       0       0
   731 ;;Total ram usage:        2 bytes
   732 ;; Hardware stack levels used:    1
   733 ;; This function calls:
   734 ;;		Nothing
   735 ;; This function is called by:
   736 ;;		Interrupt level 1
   737 ;; This function uses a non-reentrant model
   738 ;;
   739                           
   740                           
   741                           ;psect for function _isr
   742  00AE                     _isr:
   743  00AE                     i1l74:
   744  00AE  0875               	movf	??_isr+1,w
   745  00AF  008A               	movwf	10
   746  00B0  0E74               	swapf	??_isr,w
   747  00B1  0083               	movwf	3
   748  00B2  0EFE               	swapf	btemp,f
   749  00B3  0E7E               	swapf	btemp,w
   750  00B4  0009               	retfie
   751  00B5                     __end_of_isr:
   752  007E                     btemp	set	126	;btemp
   753  007E                     wtemp0	set	126
   754                           
   755                           	psect	intentry
   756  0004                     __pintentry:	
   757                           ;incstack = 0
   758                           ; Regs used in _isr: []
   759                           
   760  0004                     interrupt_function:
   761  007E                     saved_w	set	btemp
   762  0004  00FE               	movwf	btemp
   763  0005  0E03               	swapf	3,w
   764  0006  00F4               	movwf	??_isr
   765  0007  080A               	movf	10,w
   766  0008  00F5               	movwf	??_isr+1
   767  0009  120A  118A  28AE   	ljmp	_isr
   768                           
   769                           	psect	config
   770                           
   771                           ;Config register CONFIG1 @ 0x2007
   772                           ;	Oscillator Selection bits
   773                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   774                           ;	Watchdog Timer Enable bit
   775                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   776                           ;	Power-up Timer Enable bit
   777                           ;	PWRTE = OFF, PWRT disabled
   778                           ;	RE3/MCLR pin function select bit
   779                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   780                           ;	Code Protection bit
   781                           ;	CP = OFF, Program memory code protection is disabled
   782                           ;	Data Code Protection bit
   783                           ;	CPD = OFF, Data memory code protection is disabled
   784                           ;	Brown Out Reset Selection bits
   785                           ;	BOREN = OFF, BOR disabled
   786                           ;	Internal External Switchover bit
   787                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   788                           ;	Fail-Safe Clock Monitor Enabled bit
   789                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   790                           ;	Low Voltage Programming Enable bit
   791                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   792                           ;	In-Circuit Debugger Mode bit
   793                           ;	DEBUG = 0x1, unprogrammed default
   794  2007                     	org	8199
   795  2007  20D4               	dw	8404
   796                           
   797                           ;Config register CONFIG2 @ 0x2008
   798                           ;	Brown-out Reset Selection bit
   799                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   800                           ;	Flash Program Memory Self Write Enable bits
   801                           ;	WRT = OFF, Write protection off
   802  2008                     	org	8200
   803  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              2 COMMON     2     2      0
                         _USART_Init
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _USART_Init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       8      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Oct 13 12:34:51 2021

                     l19 00AD                       u30 0047                       u31 0046  
                     u40 0050                       u41 004F                       u50 0078  
                     u51 0077                       u67 0037                       u77 0085  
                     u87 008E                      l730 0017                      l740 0027  
                    l732 001C                      l750 002D                      l742 0029  
                    l734 0020                      l680 009E                      l760 003D  
                    l752 0030                      l744 002A                      l736 0021  
                    l690 00A8                      l682 00A2                      l770 0047  
                    l762 003E                      l754 0031                      l746 002B  
                    l738 0025                      l692 00AB                      l684 00A3  
                    l780 0078                      l772 0050                      l764 003F  
                    l756 0035                      l748 002C                      l694 00AC  
                    l686 00A6                      l678 0097                      l782 007F  
                    l774 005D                      l766 0040                      l758 003A  
                    l688 00A7                      l784 0083                      l776 0068  
                    l768 0041                      l786 0087                      l778 006F  
                    l788 008A                      _isr 00AE                     ?_isr 0074  
                   i1l74 00AE                     _main 0017                     btemp 007E  
                   start 000C                    ??_isr 0074                    ?_main 0074  
                  _ANSEL 0188                    _RCREG 001A                    _SPBRG 0099  
                  _PORTA 0005                    _PORTC 0007                    _PORTD 0008  
                  _TRISC 0087                    _TRISE 0089                    _TXREG 0019  
                  _dato1 0072                    _dato2 0070                    pclath 000A  
                  status 0003                    wtemp0 007E              ?_USART_Init 0074  
        __initialization 000F             __end_of_main 0097                   ??_main 0076  
                 _ADRESH 001E                   _ADRESL 009E                   _ANSELH 0189  
                 _SPBRGH 009A                   saved_w 007E      __size_of_USART_Init 0017  
__end_of__initialization 0013           __pcstackCOMMON 0074               __pmaintext 0017  
             __pintentry 0004             ??_USART_Init 0076                  __ptext1 0097  
                __ptext2 00AE             __size_of_isr 0007       __end_of_USART_Init 00AE  
   end_of_initialization 0013                _RCSTAbits 0018                _TXSTAbits 0098  
            _BAUDCTLbits 0187      start_initialization 000F              __end_of_isr 00B5  
            __pbssCOMMON 0070                ___latbits 0002        interrupt_function 0004  
               _PIE1bits 008C               _ADCON0bits 001F               _ADCON1bits 009F  
          __size_of_main 0080                 intlevel1 0000               _OSCCONbits 008F  
             _USART_Init 0097  
